name: Aarch-x64

# When creating a new workflow in GitHubâ€™s action builder the default trigger is the push event. We want to extend this to push and pull request events.
on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: diablo
            cmakeargs: '-DDEVILUTIONX_SYSTEM_LIBSODIUM=OFF -DDEVILUTIONX_SYSTEM_SDL2=OFF'
            artifact: 'diablo-nightly-aarch64.tar.xz'
          #- name: hellfire
          #  cmakeargs: '-DDEVILUTIONX_SYSTEM_LIBSODIUM=OFF -DDEVILUTIONX_SYSTEM_SDL2=OFF -DHELLFIRE=ON'
          #  artifact: 'hellfire-nightly-aarch64.tar.xz'
          #- name: diablo+patch
          #  cmakeargs: '-DDEVILUTIONX_SYSTEM_LIBSODIUM=OFF -DDEVILUTIONX_SYSTEM_SDL2=OFF -DUSE_PATCH=ON'
          #  artifact: 'diablo-nightly-aarch64p.tar.xz'
          - name: hellfire+patch
            cmakeargs: '-DDEVILUTIONX_SYSTEM_LIBSODIUM=OFF -DDEVILUTIONX_SYSTEM_SDL2=OFF -DUSE_PATCH=ON -DHELLFIRE=ON'
            artifact: 'hellfire-nightly-aarch64p.tar.xz'
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Create Build Environment
      run: |
        # Work around the somewhat broken packages in the GitHub Actions Ubuntu 20.04 image.
        # https://github.com/actions/runner-images/issues/4620#issuecomment-981333260
        sudo apt-get -y install --allow-downgrades libpcre2-8-0=10.34-7
        Packaging/nix/debian-cross-aarch64-prep.sh

    - name: Build
      working-directory: ${{github.workspace}}
      shell: bash
      env:
        CMAKE_BUILD_TYPE: ${{github.event_name == 'release' && 'Release' || 'RelWithDebInfo'}}
      run: |
        cmake -S. -Bbuild -DCMAKE_TOOLCHAIN_FILE=../CMake/aarch64-linux-gnu.toolchain.cmake \
          ${{ matrix.cmakeargs }} -DCMAKE_BUILD_TYPE=${{env.CMAKE_BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=/usr -DCPACK=ON && \
        cmake --build build -j $(getconf _NPROCESSORS_ONLN) --target package

    - name: Package
      run: Packaging/nix/LinuxReleasePackaging.sh && mv devilutionx.tar.xz devilutionx-aarch64.tar.xz

    # AppImage cross-packaging is not implemented yet.
    # - name: Package AppImage
    #   run: Packaging/nix/AppImage.sh && mv devilutionx.appimage devilutionx-aarch64.appimage

    - name: Upload Package
      if: ${{ !env.ACT }}
      uses: actions/upload-artifact@v4
      with:
        path: devilutionx-aarch64.tar.xz
        name: ${{ matrix.artifact }}
