name: CMake

# When creating a new workflow in GitHubâ€™s action builder the default trigger is the push event. We want to extend this to push and pull request events.
on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: diablo
            artifact: 'diablo-release.apk'
          #- name: hellfire
          #  cmakearg0: '-DHELLFIRE=ON'
          #  artifact: 'hellfire-release.apk'
    runs-on: ubuntu-24.04
    environment: android
    steps:
    - name: Checkout
      uses: actions/checkout@v5
      with:
        fetch-tags: true
      #  fetch-depth: 0

    - name: Create Build Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y gettext

    - name: set up JDK 17
      uses: actions/setup-java@v5
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    # CMake version 3.21.3 causes gradle to throw a NullPointerException during the build
    # Removing it will cause gradle to fall back on 3.18.1 installed by the Android SDK
    #- name: Remove system CMake
    #  run: rm /usr/local/bin/cmake

    #- name: Accept SDK licenses
    #  run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
    - name: Install CMake
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "cmake;3.31.0"

    #- name: Test CMake
    #  shell: bash
    #  working-directory: ${{ env.buildDir }}
    #  run: cmake --version

    #- name: Cache CMake build folder
    #  uses: actions/cache@v3
    #  with:
    #    path: android-project/app/.cxx
    #    key: android-cmake-${{ github.sha }}
    #    restore-keys: android-cmake-

    - name: Build
      working-directory: ${{github.workspace}}
      #env:
      #  GRADLE_ASSEMBLE: ${{env.BUILD_TYPE == 'Release' && 'assembleRelease' || 'assembleDebug'}}
      shell: bash
      run: cd android-project && ./gradlew assembleRelease -Pcmakearg0="${{ matrix.cmakearg0 }}" -Pcmakearg1="${{ matrix.cmakearg1 }}" -Pcmakearg2="${{ matrix.cmakearg2 }}"

    #- name: Upload-Package
    #  uses: actions/upload-artifact@v4
    #  with:
    #    #name: devilutionx-debug.apk
    #    #path: android-project/app/build/outputs/apk/debug/app-debug.apk
    #    name: hellfire-nightly-android-unsigned.apk
    #    path: android-project/app/build/outputs/apk/release/app-release-unsigned.apk

    #- name: Sign app APK
    #  uses: upup-company/apksigner-android@v1
    #  # ID used to access action output
    #  id: sign_app
    #  with:
    #    releaseDirectory: android-project/app/build/outputs/apk/release
    #    signingKeyBase64: ${{ secrets.SIGNING_KEY }}
    #    alias: ${{ secrets.ALIAS }}
    #    keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
    #    keyPassword: ${{ secrets.KEY_PASSWORD }}
    #    customArgs: --v1-signing-enabled,true,--v2-signing-enabled,true
    #  #env:
    #  #  # override default build-tools version (29.0.3) -- optional
    #  #  BUILD_TOOLS_VERSION: "30.0.2"

    - uses: ilharp/sign-android-release@v2 # Or use @nightly
      name: Sign app APK
      id: sign_app
      with:
        releaseDir: android-project/app/build/outputs/apk/release
        signingKey: ${{ secrets.ANDROID_SIGNING_KEY }}
        keyAlias: ${{ secrets.ANDROID_KEY_ALIAS }}
        keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
        #buildToolsVersion: 36.0.0

    - name: Rename
      working-directory: ${{github.workspace}}
      shell: bash
      run: mv ${{steps.sign_app.outputs.signedFile}} android-project/app/build/outputs/apk/release/devilutionx.apk

    #- name: Show content of workspace
    #  run: find $RUNNER_WORKSPACE
    #  shell: bash

    - name: Print text
      shell: bash
      run: cat /home/runner/work/devilutionX/devilutionX/android-project/build/reports/problems/problems-report.html

    - name: Upload-Package
      uses: actions/upload-artifact@v4
      with:
        #name: devilutionx-debug.apk
        #path: android-project/app/build/outputs/apk/debug/app-debug.apk
        name: ${{ matrix.artifact }}
        #path: android-project/app/build/outputs/apk/release/app-release-signed.apk
        path: android-project/app/build/outputs/apk/release/devilutionx.apk
