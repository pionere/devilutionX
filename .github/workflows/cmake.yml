name: CMake

# When creating a new workflow in GitHub’s action builder the default trigger is the push event. We want to extend this to push and pull request events.
on: [push, pull_request]

env:
  buildDir: '${{ github.workspace }}/build'

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    # Download and build vcpkg, without installing any port. If content is cached already, it is a no-op.
    - name: Create Build Environment
      uses: lukka/run-vcpkg@v10.5
      with:
        vcpkgGitCommitId: 'b86c0c35b88e2bf3557ff49dc831689c2f085090'
        #vcpkgGitCommitId: '30124253eecff36bc90f73341edbfb4f845e2a1e'
        #setupOnly: true
    # Now that vcpkg is installed, it is being used to run with the desired arguments.
    - name: Install Required Packages
      run: |
        vcpkg install sdl2:x64-windows libsodium:x64-windows

    - name: Configure CMake
      shell: bash
      working-directory: ${{ env.buildDir }}
      run: cmake .. -D CMAKE_BUILD_TYPE="Release" -D DEVILUTIONX_SYSTEM_LIBSODIUM=ON -D DEVILUTIONX_SYSTEM_SDL2=OFF -D DEVILUTIONX_STATIC_SDL2=OFF -D CMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake

    - name: Build
      working-directory: ${{ env.buildDir }}
      shell: bash
    # Execute the build (-j 2 : with two cores).
      run: cmake --build . -j 2 --target package --config Release

    - name: Show content of workspace
      run: find $RUNNER_WORKSPACE
      shell: bash

    # Upload the created artifact
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        path: ${{ env.buildDir }}/devilutionx.zip
        name: diablo-test-x86.zip
